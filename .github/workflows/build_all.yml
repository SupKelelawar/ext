name: Build ALL extensions

on:
  workflow_dispatch:
    inputs:
      git-repo:
        description: Git repo (Optional, defaults to <your name>/aniyomi-extensions
        default: ''
        required: false
      git-ref:
        description: Git Ref (Optional, defaults to master)
        default: 'master'
        required: false

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  CI_CHUNK_SIZE: 65
  REPO: ${{ github.event.inputs.git-repo }}

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    outputs:
      individualMatrix: ${{ steps.generate-matrices.outputs.individualMatrix }}
      multisrcMatrix: ${{ steps.generate-matrices.outputs.multisrcMatrix }}
    env:
      CI_MODULE_GEN: true
    steps:
      - name: Check inputs
        if: env.REPO == ''
        run: |
          set -e
          echo "REPO=${{ github.repository_owner }}/aniyomi-extensions" >> $GITHUB_ENV

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Generate multisrc sources
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :multisrc:generateExtensions

      - name: Get number of modules
        run: |
          set -x
          ./gradlew -q projects | grep '.*extensions\:\(individual\|multisrc\)\:.*\:.*' > projects.txt

          echo "NUM_INDIVIDUAL_MODULES=$(grep -c '.*\:individual\:.*' projects.txt)" >> $GITHUB_ENV
          echo "NUM_MULTISRC_MODULES=$(grep -c '.*\:multisrc\:.*' projects.txt)" >> $GITHUB_ENV

      - id: generate-matrices
        name: Create output matrices
        uses: actions/github-script@v6
        with:
          script: |
            const numIndividualModules = process.env.NUM_INDIVIDUAL_MODULES;
            const numMultisrcModules = process.env.NUM_MULTISRC_MODULES;
            const chunkSize = process.env.CI_CHUNK_SIZE;

            const numIndividualChunks = Math.ceil(numIndividualModules / chunkSize);
            const numMultisrcChunks = Math.ceil(numMultisrcModules / chunkSize);

            console.log(`Individual modules: ${numIndividualModules} (${numIndividualChunks} chunks of ${chunkSize})`);
            console.log(`Multi-source modules: ${numMultisrcModules} (${numMultisrcChunks} chunks of ${chunkSize})`);

            core.setOutput('individualMatrix', { 'chunk': [...Array(numIndividualChunks).keys()] });
            core.setOutput('multisrcMatrix', { 'chunk': [...Array(numMultisrcChunks).keys()] });


  build_multisrc:
    name: Build multisrc modules
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.multisrcMatrix) }}
    steps:
      - name: Check inputs
        if: env.REPO == ''
        run: |
          set -e
          echo "REPO=${{ github.repository_owner }}/aniyomi-extensions" >> $GITHUB_ENV

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Generate sources from the multi-source library
        uses: gradle/gradle-build-action@v2
        env:
          CI_MODULE_GEN: "true"
        with:
          arguments: :multisrc:generateExtensions

      - name: Build extensions (chunk ${{ matrix.chunk }})
        uses: gradle/gradle-build-action@v2
        env:
          CI_MULTISRC: "true"
          CI_CHUNK_NUM: ${{ matrix.chunk }}
        with:
          arguments: assembleDebug

      - name: Upload APKs (chunk ${{ matrix.chunk }})
        uses: actions/upload-artifact@v3
        with:
          name: "multisrc-apks-${{ matrix.chunk }}"
          path: "**/*.apk"
          retention-days: 1

  build_individual:
    name: Build individual modules
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.individualMatrix) }}
    steps:
      - name: Check inputs
        if: env.REPO == ''
        run: |
          set -e
          echo "REPO=${{ github.repository_owner }}/aniyomi-extensions" >> $GITHUB_ENV

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Build extensions (chunk ${{ matrix.chunk }})
        uses: gradle/gradle-build-action@v2
        env:
          CI_MULTISRC: "false"
          CI_CHUNK_NUM: ${{ matrix.chunk }}
        with:
          arguments: assembleDebug

      - name: Upload APKs (chunk ${{ matrix.chunk }})
        uses: actions/upload-artifact@v3
        with:
          name: "individual-apks-${{ matrix.chunk }}"
          path: "**/*.apk"
          retention-days: 1
